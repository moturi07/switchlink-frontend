{"remainingRequest":"C:\\xampp\\htdocs\\switchlink-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\switchlink-frontend\\src\\components\\Dashboard.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\xampp\\htdocs\\switchlink-frontend\\src\\components\\Dashboard.vue","mtime":1628311089707},{"path":"C:\\xampp\\htdocs\\switchlink-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\switchlink-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\switchlink-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\switchlink-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\switchlink-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhvbWUgewogICAgcGFkZGluZzogMCAzMHB4OwogICAgbWF4LXdpZHRoOiA4MDBweDsKICAgIG1hcmdpbjogMCBhdXRvOwp9Ci50YWJsZS13cmFwcGVyLXNjcm9sbC15IHsKICAgIGRpc3BsYXk6IGJsb2NrOwp9CgoubXktY3VzdG9tLXNjcm9sbGJhciB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBoZWlnaHQ6IDM0MHB4OwogICAgb3ZlcmZsb3c6IGF1dG87Cn0K"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"home\">\r\n        <p v-if=\"loading\" class=\"post--empty\">Loading....</p>\r\n        <div class=\"\" v-else>\r\n            <div v-for=\"account in accounts\" :key=\"account.id\">\r\n                <div class=\"col-12 card\">\r\n                    <div class=\"twt-feed blue-bg\">\r\n                    <div class=\"media\">\r\n                    <img class=\"align-self-center rounded-circle mr-3\" style=\"width:85px; height:85px;\" alt=\"\" src=\"https://directemployers.org/wp-content/uploads/2018/08/avatar-JohnDoe-300x300.jpg\">\r\n                    <div class=\"media-body\">\r\n                    <h2 class=\" display-6\">{{account.first_name}}</h2>\r\n                    <p > Account No: {{account.account_number}}</p>\r\n                    <p class=\"text-dark\">Balance:  {{account.balance}}</p>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-5\">               \r\n                        \r\n                        <div class=\"col-12 card my-3\">\r\n                            <div class=\"card-body\">\r\n                            <button class=\"btn btn-small btn-primary\" v-on:click=\"deposit_container = !deposit_container\">Deposit Funds</button>\r\n                            <form @submit.prevent=\"handleDeposit\" v-if=\"deposit_container\">\r\n                                <div class=\"mb-3\">\r\n                                    <input type=\"hidden\" class=\"form-control\" v-model=\"user_id\" >\r\n                                    <input type=\"hidden\" class=\"form-control\" v-model=\"account_number\">\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"deposit_amount\" class=\"form-label\">Amount to Deposit</label>\r\n                                    <input type=\"number\" class=\"form-control\" v-model=\"deposit_amount\" id=\"deposit_amount\">\r\n                                </div>\r\n                                <button class=\"btn btn-info\">Deposit Funds</button>\r\n                            </form>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 card\">\r\n                            <div class=\"card-body\">\r\n                            <button class=\"btn btn-small btn-success\" v-on:click=\"withdraw_container = !withdraw_container\">Withdraw from Account</button>\r\n                            <form @submit.prevent=\"handleWithdrawal\" v-if=\"withdraw_container\">\r\n                                <div class=\"mb-3\">\r\n                                    <input type=\"hidden\" class=\"form-control\" v-model=\"user_id\">\r\n                                    <input type=\"hidden\" class=\"form-control\" v-model=\"account_number\">\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"withdraw_amount\" class=\"form-label\">Amount to Withdraw</label>\r\n                                    <input type=\"number\" class=\"form-control\" v-model=\"withdraw_amount\" id=\"withdraw_amount\">\r\n                                </div>\r\n                                <button class=\"btn btn-info\">Withdraw Funds</button>\r\n                            </form> \r\n                        </div>\r\n                        </div>\r\n                        <div class=\"col-12 card my-3\">\r\n                            <div class=\"card-body\">\r\n                            <button class=\"btn btn-small btn btn-dark\" v-on:click=\"transfer_container = !transfer_container\">Transfer to Account</button>\r\n                            <form @submit.prevent=\"handleTransfer\" v-if=\"transfer_container\">\r\n                                <div class=\"mb-3\">\r\n                                    <input type=\"hidden\" class=\"form-control\" v-model=\"user_id\">\r\n                                    <input type=\"hidden\" class=\"form-control\" v-model=\"account_number\">\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"transfer_amount\" class=\"form-label\">Amount to Transfer</label>\r\n                                    <input type=\"number\" class=\"form-control\" v-model=\"transfer_amount\" id=\"transfer_amount\">\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"receiver_account\" class=\"form-label\">Receiver Account <small>i.e 2222</small></label>\r\n                                    <input type=\"number\" class=\"form-control\" v-model=\"receiver_account\" id=\"receiver_account\">\r\n                                </div>                                \r\n                                <button class=\"btn btn-info\">Transfer Funds</button>\r\n                            </form> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-12 col-md-7\">\r\n                        <h4 class=\"text-center\">Transactions</h4>\r\n                        <div class=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr><th>Type</th><th>Amount</th><th>Date</th></tr>\r\n                                </thead>\r\n                                <tr v-for=\"records in transactions\" :key=\"records.id\">                \r\n                                    <td>{{ records.transaction_type }}</td>\r\n                                    <td>{{ records.amount }}</td>\r\n                                    <td>{{ records.date }}</td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>        \r\n    </div>\r\n</template>\r\n<script>\r\n// @ is an alias to /src\r\nimport axios from \"axios\";\r\nimport firebase from 'firebase/app';\r\n\r\n// These imports load individual services into the firebase namespace.\r\nimport 'firebase/auth';\r\nimport 'firebase/database';   \r\n//const md5 = require('md5-nodejs');\r\n    export default {\r\n        data() {\r\n            return { \r\n                user_id: null,\r\n                account_number: null,\r\n                deposit_amount: null,\r\n                withdraw_amount: null,\r\n                transfer_amount: null,\r\n                receiver_account: null,\r\n                userName: null,\r\n                transactions: null,\r\n                accounts: null,\r\n                deposit_container: false,\r\n                withdraw_container: false,\r\n                transfer_container: false,\r\n                loading: false,\r\n                \r\n            };\r\n        },       \r\n       \r\n        mounted() {\r\n            this.getPosts();\r\n            //this.getTransactions();\r\n        },\r\n        created() {\r\n            //this.getPosts();\r\n            this.getTransactions();\r\n        },\r\n        methods: {            \t\r\n            async getPosts() {\r\n                var user=firebase.auth().currentUser;\r\n                if(user !=null){                    \r\n                    //var hash = md5(user.email);\r\n                    this.loading = true;\r\n                    try {\r\n                        let res = await axios({\r\n                            url: \"http://localhost:59437//api/Accounts/GetAccount/\"+user.email+\"/\",\r\n                            method: \"GET\",\r\n                        });                        \r\n                        let accounts = JSON.parse(res.data);\r\n                        \r\n                        this.accounts = accounts;                       \r\n\r\n                        this.user_id=accounts[0].id;\r\n                        this.account_number=accounts[0].account_number;\r\n                        this.loading = false;\r\n                    } catch (error) {\r\n                        this.loading = false;\r\n                    }\r\n                }\r\n                else{\r\n                    await firebase.auth().signOut();\r\n                    this.$router.push('/login');\r\n                }\r\n            },\r\n            async getTransactions() {\r\n                var user=firebase.auth().currentUser;\r\n                if(user !=null){ \r\n                    try {\r\n                        let acc_resp =await axios({\r\n                            url: \"http://localhost:59437//api/Accounts/GetAccountNumber/\"+user.email+\"/\",\r\n                            method: \"GET\",\r\n                        });                     \r\n                        let accounts = JSON.parse(acc_resp.data);\r\n                        let no=accounts[0].account_number;\r\n                        let trans = await axios({\r\n                            url: \"http://localhost:59437//api/values/Get/\"+no,\r\n                            method: \"GET\",\r\n                        });\r\n                        let transactions= JSON.parse(trans.data);\r\n                        this.transactions=transactions;\r\n                    } catch (error) {\r\n                        this.loading = false;\r\n                    }\r\n                }\r\n                else{\r\n                    await firebase.auth().signOut();\r\n                    this.$router.push('/login');\r\n                }\r\n            },\r\n            async handleDeposit() {\r\n                try{\r\n                    const response=await axios.post('Accounts/MakeDeposit/'+this.user_id, {\r\n                        account_number: this.account_number,\r\n                        deposit_amount: this.deposit_amount\r\n                    });        \r\n                    alert(response.data);                    \r\n                    //this.getPosts();\r\n                    window.location.reload();\r\n                }\r\n                catch(err){\r\n                    alert(err)\r\n                }\r\n            },\r\n            async handleWithdrawal(){\r\n                try{\r\n                    const response=await axios.post('Accounts/MakeWithdrawal/'+this.user_id, {\r\n                        account_number: this.account_number,\r\n                        withdraw_amount: this.withdraw_amount\r\n                    });        \r\n                    alert(response.data);\r\n                    window.location.reload();\r\n                }\r\n                catch(err){\r\n                    alert(err)\r\n                }\r\n            },\r\n            async handleTransfer(){\r\n                try{\r\n                    const response=await axios.post('Accounts/TransferFunds/'+this.user_id, {\r\n                        account_number: this.account_number,\r\n                        receiver_account: this.receiver_account,\r\n                        transfer_amount: this.transfer_amount\r\n                    });        \r\n                    alert(response.data);\r\n                    window.location.reload();\r\n                }\r\n                catch(err){\r\n                    alert(err)\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style>\r\n    .home {\r\n        padding: 0 30px;\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n    }\r\n    .table-wrapper-scroll-y {\r\n        display: block;\r\n    }\r\n\r\n    .my-custom-scrollbar {\r\n        position: relative;\r\n        height: 340px;\r\n        overflow: auto;\r\n    }\r\n</style>\r\n"]}]}